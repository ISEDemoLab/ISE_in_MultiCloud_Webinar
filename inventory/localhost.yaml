---
# -----------------------------------------------------------------------------
# Verify your inventory:
#   ansible-inventory --graph
#   ansible-inventory --list
#
# There are two default groups:
#   - all : contains every host
#   - ungrouped : contains all hosts not belonging to another group
#
# You may create groups based on
#   - What : an application, stack or microservice
#   - Where : a datacenter, region, local, storage, etc.
#   - When : the development stage for prod, test, etc.
#
# For details on creating Ansible inventory files, see
#   https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html
# For common patterns for targeting inventory hosts and groups:
#   https://docs.ansible.com/ansible/latest/user_guide/intro_patterns.html
# -----------------------------------------------------------------------------

all:
  #
  # Ungrouped Hosts - names should be DNS-compatible
  #
  hosts:
    localhost:
      ansible_connection: local # deploy playbook to control machine
  children:
    ise_nodes:
      hosts:
        # iseadmin01: 
        #   ansible_host: 10.1.100.21
        # # ▼ You can add more ISE nodes here ▼
        # iseadmin02:
        #   ansible_host: 10.1.100.22
        ise-hyperv:
          ansible_host: 10.1.100.23
        ise-kvm:
          ansible_host: 10.1.100.24
        ise-nutanix:
          ansible_host: 10.1.100.25
        # ise-ansible:
        #   ansible_host: 10.1.100.30
        # ise-azure:
        #   ansible_host: 192.168.100.4
        # ise-oci:
        #   ansible_host: 192.168.102.4 # ⭐ Change me to your ISE node's IP address!
      vars: # these group_vars are shared among the ISE nodes
        ansible_become: no # ISE does not have a superuser/enable mode
        ansible_connection: ansible.netcommon.network_cli
        ansible_network_os: cisco.ios.ios
        # ⭐ ISE SSH username is `iseadmin` for ISE 3.2+ cloud instances!
        ansible_ssh_user: "{{ lookup('env','ISE_SSH_USERNAME') }}"
        # ⭐ Un/Comment the SSH password or private_key_file - whichever you use!
        # ansible_ssh_password: "{{ lookup('env','ISE_REST_PASSWORD') }}"
        # ansible_ssh_password: "{{ lookup('env','ISE_INIT_PASSWORD') }}"
        ansible_ssh_private_key_file: "{{ ssh_key_private_file }}"

  # global vars
  vars:
    # dns_server: 208.67.222.222      # Cisco Umbrella
    # ntp_server: time.nist.gov
    # domain_name: securitydemo.net

    #
    # All hostvars
    #
    # ansible_connection: local   # deploy playbook to control machine
    # ansible_connection: ssh     # SSH types are smart, ssh (default) or paramiko
    # ansible_user: admin
    # ansible_host: hostname      # name of the host if different from the alias
    # ansible_port: port#         # port number, if not the default (22 for ssh)
    # ansible_user: username      # username when connecting to the host
    # ansible_password: password  # password to authenticate to the host

    #
    # Specific to the SSH connection:
    #
    # ansible_ssh_user: root
    # ansible_ssh_pass: C1sco12345

    # ansible_ssh_private_key_file_file: path_to_file # Private key file used by ssh
    # ansible_ssh_common_args: args # appended to cmdline for sftp, scp, and ssh
    # ansible_sftp_extra_args: args # appended to the default sftp command line
    # ansible_scp_extra_args: args  # appended to the default scp command line
    # ansible_ssh_extra_args: args  # appended to the default ssh command line
    # ansible_ssh_pipelining: value # use SSH pipelining; overrides ansible.cfg
    # ansible_ssh_executable: path  # overrides the default system ssh

    #
    # Non-SSH connection types
    # With the host specific parameter ansible_connection: <connector>
    # the connection type can be changed.
    #
    # ansible_connection: ssh     # the default Ansible connection

    # ansible_connection: local   # deploy playbook to control machine

    # ansible_connection: docker          # deploy using local Docker client
    # # The following parameters are processed by the Docker connector:
    # ansible_host: hostname           # name of the Docker container
    # ansible_user: username           # the username within the container
    # ansible_become: yes_or_no        # become_user will be used
    # ansible_docker_extra_args: args  # a string with add'l args
